// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum VideoStatus {
  PROCESSING
  TRANSCODED
}

enum Quality {
  QUALITY_240P
  QUALITY_480P
  QUALITY_720P
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())

  channel Channel?
  videos  Video[]
}

model Channel {
  id              String  @id @default(uuid())
  name            String
  description     String?
  slug            String  @unique
  subscriberCount Int     @default(0)

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  videos    Video[]
  createdAt DateTime @default(now())
}

model Video {
  id           String @id @default(uuid())
  title        String
  thumbnailURL String

  creator   User   @relation(fields: [creatorId], references: [id])
  creatorId String

  currentTimestamp Float

  channel   Channel @relation(fields: [channelId], references: [id])
  channelId String

  status   VideoStatus @default(PROCESSING)
  category String?

  viewCount Int      @default(0)
  createdAt DateTime @default(now())

  videoUrls VideoUrl[]
}

model VideoUrl {
  id      String  @id @default(uuid())
  quality Quality
  url     String

  video   Video  @relation(fields: [videoId], references: [id])
  videoId String
}
